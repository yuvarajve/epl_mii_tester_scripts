#ifndef OBJECT_DICTIONARY_H_
#define OBJECT_DICTIONARY_H_

#include "common.h"

#define NUMBER_OF_OBJECTS 32
#define NUMBER_OF_SUBINDEX_POINTERS 352
#define NUMBER_OF_DATA_BYTES 1251
#define OFFSETS_OF_SUBINDEX_LENGTH 7

// This is an Auto generated file. Do not edit this file.

typedef struct subindex_size
{
  void * address;
  unsigned size;
}subindex_size;

typedef struct object
{
  unsigned short addr;
  unsigned short subindex_count;
  void **subindex_data;
  void *access_pointer;
} object;

unsigned char data[NUMBER_OF_DATA_BYTES] = {
  0x0,  0x0,  0x0,  0x0,  0x4,  0x0, 0x00,  0x2,  0x5, 0xff,
  0x0,  0x5, 0xff,  0x0,  0x5,  0xa,  0x0,  0x5,  0x0,  0x0,
  0x1,  0x1,  0x1,  0x1,  0x6, 0xff,  0x0,  0x0,  0x6,  0x0,
  0x0,  0x0,  0x6,  0x5,  0x0,  0x0,  0x6, 0xff,  0x0,  0x0,
  0x1,  0x1,  0x1,  0x1,  0x1,  0x4,   0xAB,  0x0,  0x0,  0x0,
  0x3,    0,    0,  232,    3,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  136,   19,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  232,    3,    0,    0,  145,
    1,    7,    0,   52,   18,    0,    0,  205,  171,    0,
    0,  187,  170,    0,    0,   17,   17,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   48,    0,    0,    0,  100,
    0,    0,    0,    0,    6,    0,    0,  128,    5,    0,
    0,    0,    2,    0,    0,    0,    3,    0,    0,    0,
    4,    0,    0,    0,    5,    0,    0,    8,    1,    0,
   98,    8,    2,    0,   98,    8,    3,    0,   98,    8,
    4,    0,   98,  128,    1,    0,   64,  128,    2,    0,
   64,  128,    3,    0,   64,  128,    4,    0,   64,   16,
    1,    0,   97,    8,    1,    0,  100,    8,    2,    0,
  100,    8,    3,    0,  100,  'X',  'M',  'O',  'S',  ' ',
  'C',  'A',  'N',  'O',  'p',  'e',  'n',  ' ',  'N',  'o',
  'd',  'e',  ' ',  ':',  ' ',  'D',  'S',  ' ',  '3',  '0',
  '1',  ' ',  '&',  ' ',  '4',  '0',  '1',  'H',  ':',  '1',
  '.',  '0',  '.',  '0',  'S',  ':',  '1',  '.',  '0',  '.',
  '0'
};


void * subindex_pointers[NUMBER_OF_SUBINDEX_POINTERS] = {
 &data[0]+  89, &data[0]+   3, &data[0]+   4, &data[0]+  93, &data[0]+  97,
 &data[0]+ 101, &data[0]+ 105, &data[0]+   5, &data[0]+ 109, &data[0]+ 113,
 &data[0]+ 117, &data[0]+ 121, &data[0]+ 125, &data[0]+ 129, &data[0]+ 133,
 &data[0]+ 137, &data[0]+ 141, &data[0]+ 145, &data[0]+ 149, &data[0]+ 153,
 &data[0]+ 157, &data[0]+ 161, &data[0]+ 165, &data[0]+ 169, &data[0]+ 173,
 &data[0]+ 177, &data[0]+ 181, &data[0]+ 185, &data[0]+ 189, &data[0]+ 193,
 &data[0]+ 197, &data[0]+ 201, &data[0]+ 205, &data[0]+ 209, &data[0]+ 213,
 &data[0]+ 217, &data[0]+ 221, &data[0]+ 225, &data[0]+ 229, &data[0]+ 233,
 &data[0]+ 237, &data[0]+ 241, &data[0]+ 245, &data[0]+ 249, &data[0]+ 253,
 &data[0]+ 257, &data[0]+ 261, &data[0]+ 265, &data[0]+ 269, &data[0]+ 273,
 &data[0]+ 277, &data[0]+ 281, &data[0]+ 285, &data[0]+ 289, &data[0]+ 293,
 &data[0]+ 297, &data[0]+ 301, &data[0]+ 305, &data[0]+ 309, &data[0]+ 313,
 &data[0]+ 317, &data[0]+ 321, &data[0]+ 325, &data[0]+ 329, &data[0]+ 333,
 &data[0]+ 337, &data[0]+ 341, &data[0]+ 345, &data[0]+ 349, &data[0]+ 353,
 &data[0]+ 357, &data[0]+ 361, &data[0]+ 365, &data[0]+ 369, &data[0]+ 373,
 &data[0]+ 377, &data[0]+ 381, &data[0]+ 385, &data[0]+ 389, &data[0]+ 393,
 &data[0]+ 397, &data[0]+ 401, &data[0]+ 405, &data[0]+ 409, &data[0]+ 413,
 &data[0]+ 417, &data[0]+ 421, &data[0]+ 425, &data[0]+ 429, &data[0]+ 433,
 &data[0]+ 437, &data[0]+ 441, &data[0]+ 445, &data[0]+ 449, &data[0]+ 453,
 &data[0]+ 457, &data[0]+ 461, &data[0]+ 465, &data[0]+ 469, &data[0]+ 473,
 &data[0]+ 477, &data[0]+ 481, &data[0]+ 485, &data[0]+ 489, &data[0]+ 493,
 &data[0]+ 497, &data[0]+ 501, &data[0]+ 505, &data[0]+ 509, &data[0]+ 513,
 &data[0]+ 517, &data[0]+ 521, &data[0]+ 525, &data[0]+ 529, &data[0]+ 533,
 &data[0]+ 537, &data[0]+ 541, &data[0]+ 545, &data[0]+ 549, &data[0]+ 553,
 &data[0]+ 557, &data[0]+ 561, &data[0]+ 565, &data[0]+ 569, &data[0]+ 573,
 &data[0]+ 577, &data[0]+ 581, &data[0]+ 585, &data[0]+ 589, &data[0]+ 593,
 &data[0]+ 597, &data[0]+ 601, &data[0]+ 605, &data[0]+ 609, &data[0]+ 613,
 &data[0]+ 617, &data[0]+ 621, &data[0]+ 625, &data[0]+ 629, &data[0]+ 633,
 &data[0]+ 637, &data[0]+ 641, &data[0]+ 645, &data[0]+ 649, &data[0]+ 653,
 &data[0]+ 657, &data[0]+ 661, &data[0]+ 665, &data[0]+ 669, &data[0]+ 673,
 &data[0]+ 677, &data[0]+ 681, &data[0]+ 685, &data[0]+ 689, &data[0]+ 693,
 &data[0]+ 697, &data[0]+ 701, &data[0]+ 705, &data[0]+ 709, &data[0]+ 713,
 &data[0]+ 717, &data[0]+ 721, &data[0]+ 725, &data[0]+ 729, &data[0]+ 733,
 &data[0]+ 737, &data[0]+ 741, &data[0]+ 745, &data[0]+ 749, &data[0]+ 753,
 &data[0]+ 757, &data[0]+ 761, &data[0]+ 765, &data[0]+ 769, &data[0]+ 773,
 &data[0]+ 777, &data[0]+ 781, &data[0]+ 785, &data[0]+ 789, &data[0]+ 793,
 &data[0]+ 797, &data[0]+ 801, &data[0]+ 805, &data[0]+ 809, &data[0]+ 813,
 &data[0]+ 817, &data[0]+ 821, &data[0]+ 825, &data[0]+ 829, &data[0]+ 833,
 &data[0]+ 837, &data[0]+ 841, &data[0]+ 845, &data[0]+ 849, &data[0]+ 853,
 &data[0]+ 857, &data[0]+ 861, &data[0]+ 865, &data[0]+ 869, &data[0]+ 873,
 &data[0]+ 877, &data[0]+ 881, &data[0]+ 885, &data[0]+ 889, &data[0]+ 893,
 &data[0]+ 897, &data[0]+ 901, &data[0]+ 905, &data[0]+ 909, &data[0]+ 913,
 &data[0]+ 917, &data[0]+ 921, &data[0]+ 925, &data[0]+ 929, &data[0]+ 933,
 &data[0]+ 937, &data[0]+ 941, &data[0]+ 945, &data[0]+ 949, &data[0]+ 953,
 &data[0]+ 957, &data[0]+ 961, &data[0]+ 965, &data[0]+ 969, &data[0]+ 973,
 &data[0]+ 977, &data[0]+ 981, &data[0]+ 985, &data[0]+ 989, &data[0]+ 993,
 &data[0]+ 997, &data[0]+1001, &data[0]+1005, &data[0]+1009, &data[0]+1013,
 &data[0]+1017, &data[0]+1021, &data[0]+1025, &data[0]+1029, &data[0]+1033,
 &data[0]+1037, &data[0]+1041, &data[0]+1045, &data[0]+1049, &data[0]+1053,
 &data[0]+1057, &data[0]+1061, &data[0]+1065, &data[0]+1069, &data[0]+1073,
 &data[0]+1077, &data[0]+1081, &data[0]+1085, &data[0]+1089, &data[0]+1093,
 &data[0]+1097, &data[0]+1101, &data[0]+1105, &data[0]+1109, &data[0]+1113,
 &data[0]+1117, &data[0]+1121, &data[0]+1125, &data[0]+1129, &data[0]+1205,
 &data[0]+1237, &data[0]+1244, &data[0]+  51, &data[0]+   6, &data[0]+  53,
 &data[0]+   7, &data[0]+1133, &data[0]+1137, &data[0]+   8, &data[0]+1141,
 &data[0]+   9, &data[0]+  55, &data[0]+  10, &data[0]+  57, &data[0]+  11,
 &data[0]+1145, &data[0]+  12, &data[0]+  59, &data[0]+  13, &data[0]+  61,
 &data[0]+  14, &data[0]+1149, &data[0]+  15, &data[0]+  63, &data[0]+  16,
 &data[0]+  65, &data[0]+  17, &data[0]+1153, &data[0]+  18, &data[0]+  67,
 &data[0]+  19, &data[0]+  69, &data[0]+  20, &data[0]+1157, &data[0]+  21,
 &data[0]+1161, &data[0]+  22, &data[0]+1165, &data[0]+  23, &data[0]+1169,
 &data[0]+  24, &data[0]+1173, &data[0]+  25, &data[0]+  71, &data[0]+  26,
 &data[0]+  73, &data[0]+  27, &data[0]+  28, &data[0]+1177, &data[0]+  29,
 &data[0]+  75, &data[0]+  30, &data[0]+  77, &data[0]+  31, &data[0]+  32,
 &data[0]+1181, &data[0]+  33, &data[0]+  79, &data[0]+  34, &data[0]+  81,
 &data[0]+  35, &data[0]+  36, &data[0]+1185, &data[0]+  37, &data[0]+  83,
 &data[0]+  38, &data[0]+  85, &data[0]+  39, &data[0]+  40, &data[0]+1189,
 &data[0]+  41, &data[0]+1193, &data[0]+  42, &data[0]+1197, &data[0]+  43,
 &data[0]+1201, &data[0]+  44, &data[0]+  87, &data[0]+  45, &data[0]+  46,
 &data[0]+  47, &data[0]+  48, &data[0]+  49, &data[0]+  50, &data[0]+   0,
 &data[0]+   1, &data[0]+   2
};


unsigned char access_type[NUMBER_OF_SUBINDEX_POINTERS] = {
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RW,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RO,    RO,    RO, 
   RO,    RO,    RW,    RW,    RW, 
CONST, CONST,    RW,    RW,    RW, 
   RO,    RO,    RO,    RO,    RW, 
   RW,    RW,    RW,    RW,    RO, 
   RW,    RW,    RW,    RW,    RW, 
   RO,    RW,    RW,    RW,    RW, 
   RW,    RO,    RW,    RW,    RW, 
   RW,    RW,    RW,    RW,    RW, 
   RW,    RW,    RW,    RW,    RW, 
   RO,    RW,    RW,    RW,    RW, 
   RW,    RW,    RO,    RW,    RW, 
   RW,    RW,    RW,    RW,    RO, 
   RW,    RW,    RW,    RW,    RW, 
   RW,    RO,    RW,    RW,    RW, 
   RW,    RW,    RW,    RW,    RW, 
   RW,    RW,    RW,    RW,    RW, 
   RW,    RO,    RO,    RO,   RWW, 
  RWW,   RWW,   RWW,    RO,    RO, 
   RO,    RO
};

object object_dict[NUMBER_OF_OBJECTS] = {
{0x1000, 1, &subindex_pointers[0] + 0, &access_type[0] + 0},
 {0x1001, 1, &subindex_pointers[0] + 1, &access_type[0] + 1},
 {0x1018, 5, &subindex_pointers[0] + 2, &access_type[0] + 2},
 {0x1003, 255, &subindex_pointers[0] + 7, &access_type[0] + 7},
 {0x1006, 1, &subindex_pointers[0] + 262, &access_type[0] + 262},
 {0x1007, 1, &subindex_pointers[0] + 263, &access_type[0] + 263},
 {0x1008, 1, &subindex_pointers[0] + 264, &access_type[0] + 264},
 {0x1009, 1, &subindex_pointers[0] + 265, &access_type[0] + 265},
 {0x100A, 1, &subindex_pointers[0] + 266, &access_type[0] + 266},
 {0x100C, 1, &subindex_pointers[0] + 267, &access_type[0] + 267},
 {0x100D, 1, &subindex_pointers[0] + 268, &access_type[0] + 268},
 {0x1017, 1, &subindex_pointers[0] + 269, &access_type[0] + 269},
 {0x1200, 3, &subindex_pointers[0] + 270, &access_type[0] + 270},
 {0x1400, 6, &subindex_pointers[0] + 273, &access_type[0] + 273},
 {0x1401, 6, &subindex_pointers[0] + 279, &access_type[0] + 279},
 {0x1402, 6, &subindex_pointers[0] + 285, &access_type[0] + 285},
 {0x1403, 6, &subindex_pointers[0] + 291, &access_type[0] + 291},
 {0x1600, 2, &subindex_pointers[0] + 297, &access_type[0] + 297},
 {0x1601, 2, &subindex_pointers[0] + 299, &access_type[0] + 299},
 {0x1602, 2, &subindex_pointers[0] + 301, &access_type[0] + 301},
 {0x1603, 2, &subindex_pointers[0] + 303, &access_type[0] + 303},
 {0x1800, 7, &subindex_pointers[0] + 305, &access_type[0] + 305},
 {0x1801, 7, &subindex_pointers[0] + 312, &access_type[0] + 312},
 {0x1802, 7, &subindex_pointers[0] + 319, &access_type[0] + 319},
 {0x1803, 7, &subindex_pointers[0] + 326, &access_type[0] + 326},
 {0x1A00, 2, &subindex_pointers[0] + 333, &access_type[0] + 333},
 {0x1A01, 2, &subindex_pointers[0] + 335, &access_type[0] + 335},
 {0x1A02, 2, &subindex_pointers[0] + 337, &access_type[0] + 337},
 {0x1A03, 2, &subindex_pointers[0] + 339, &access_type[0] + 339},
 {0x6100, 2, &subindex_pointers[0] + 341, &access_type[0] + 341},
 {0x6200, 5, &subindex_pointers[0] + 343, &access_type[0] + 343},
 {0x6400, 4, &subindex_pointers[0] + 348, &access_type[0] + 348},
 };


subindex_size subindex_size_data[OFFSETS_OF_SUBINDEX_LENGTH] = {
{ &data[  0],   1},
{ &data[  3],   1},
{ &data[ 51],   2},
{ &data[ 89],   4},
{ &data[1205],  32},
{ &data[1237],   7},
{ &data[1244],   7}
};

#endif
